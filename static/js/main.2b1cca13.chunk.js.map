{"version":3,"sources":["Sidebar.js","Projection.js","About.js","Content.js","Layout.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","props","setSidebarCanvas","side_canvas","handleSelectAlgorithm","bind","e","v","target","selectAlgorithm","_this","_this$props","sidebar_orientation","sidebar_image_size","grem","p","hover_index","mnist_labels","color_array","algorithm_options","algorithm_choice","React","createElement","style","display","flexDirection","justifyContent","flexGrow","padding","alignItems","onChange","map","option","index","ref","width","height","background","concat","join","color","transition","onClick","toggleAbout","Component","mnist_tile_locations","_toConsumableArray","Array","n","i","process","mnist_images","src","img","document","Projection","call","handleResize","camera","aspect","updateProjectionMatrix","renderer","setSize","current_scale","getScaleFromZ","position","z","d3_x","x","d3_y","y","resize_transform","d3","translate","scale","view","mount","d3_zoom","transform","state","init","_assertThisInitialized","addPoints","setUpCamera","animate","getZFromScale","changeEmbeddings","prev_choice","new_choice","_this2","ranges","start","sprite_side","end","sprite_number","push","embedding_chunks","range","algorithm_embedding_keys","slice","_loop","echunk","c","points","scene","children","numVertices","length","geometry","attributes","array","Float32Array","l","tween","TWEEN","to","easing","Linear","None","onUpdate","THREE","needsUpdate","rvFOV","degToRad","fov","Math","tan","camera_z_position","fov_height","d3_transform","k","set","new_size","input","scale1","domain","clamp","zoomScaler","point_group","material","uniforms","size","camera_z_start","mnist_embeddings","vFOV","xs","min_x","_","max_x","ys","min_y","max_y","zs","min_z","max_z","max_x_from_center","m","abs","max_y_from_center","max_z_from_center","far","max","_this$props2","label_chunks","loader","textures","t","load","flipY","magFilter","lchunk","vertices","embedding","vert","positions","offsets","colors","addAttribute","floor","console","log","texture","repeat","vertexShader","fragmentShader","point_cloud","userData","sprite_index","add","hover_container","transparent","point","frustumCulled","visible","digit_index","full_index","_this$props3","copyVector3sArray","offset","highlight_container","highlights","remove","mouse_position","_this$props4","sidebar_ctx","mouse_vector","_ref","_ref2","_slicedToArray","mouseX","mouseY","mouseToThree","raycaster","setFromCamera","params","Points","threshold","intersects","intersectObjects","intersect","sortIntersectsByDistanceToRay","object","setHoverIndex","highlightPoint","fillRect","drawImage","_this3","domElement","on","_d3$mouse","node","_d3$mouse2","checkIntersects","_this$props5","antialias","setClearColor","appendChild","controls","OrbitControls","addBlankHighlightPoints","handleMouse","requestAnimationFrame","update","render","prevProps","_this$props6","removeChild","_this4","_this$props7","overflow","About","left","top","right","bottom","paddingTop","overflowY","fontSize","lineHeight","className","textAlign","cursor","textDecoration","maxWidth","margin","Markdown","tb","lr","Layout","ww","wh","sidebar_height","show_about","dim_choice","checkHash","selectDim","dim_options","indexOf","setState","window","innerWidth","innerHeight","sidebar_mount","offsetHeight","imageSmoothingEnabled","canvas","ctx","getContext","history","pushState","location","pathname","hash","addEventListener","removeEventListener","tsne_mnist_embeddings","md08_umap_mnist_embeddings","_this$state","two_dim","sidebar_style","main_style","font_size","_objectSpread","scaler","general_style","Data","embeddings","fetch","then","response","json","scaled_embeddings","scaleEmbeddings","Object","assign","App","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b1cca13.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Sidebar extends Component {\n  componentDidMount() {\n    this.props.setSidebarCanvas(this.side_canvas)\n    this.handleSelectAlgorithm = this.handleSelectAlgorithm.bind(this)\n  }\n\n  handleSelectAlgorithm(e) {\n    let v = e.target.value\n    this.props.selectAlgorithm(v)\n  }\n\n  render() {\n    let {\n      sidebar_orientation,\n      sidebar_image_size,\n      grem,\n      p,\n      hover_index,\n      mnist_labels,\n      color_array,\n      algorithm_options,\n      algorithm_choice,\n    } = this.props\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          flexGrow: 1,\n        }}\n      >\n        <div>\n          {' '}\n          <div\n            style={{\n              padding: grem / 2,\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div>Algorithm:</div>\n            <select\n              onChange={this.handleSelectAlgorithm}\n              value={algorithm_options[algorithm_choice]}\n            >\n              {algorithm_options.map((option, index) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection:\n                sidebar_orientation === 'horizontal' ? 'row' : 'column',\n            }}\n          >\n            <div>\n              <canvas\n                ref={side_canvas => {\n                  this.side_canvas = side_canvas\n                }}\n                width={sidebar_image_size}\n                height={sidebar_image_size}\n              />\n            </div>\n            <div style={{ flexGrow: 1 }}>\n              <div\n                style={{\n                  background: hover_index\n                    ? `rgb(${color_array[mnist_labels[hover_index]].join(',')})`\n                    : 'transparent',\n                  color: hover_index ? '#000' : '#fff',\n                  padding: p(grem / 4, grem / 2),\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  transition: 'all 0.1s linear',\n                }}\n              >\n                <div>Label:</div>\n                {hover_index ? <div>{mnist_labels[hover_index]}</div> : null}\n              </div>\n              <div\n                style={{\n                  padding: p(grem / 4, grem / 2),\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                Index:\n                {hover_index ? <div>{hover_index}</div> : null}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div style={{ padding: grem / 2 }}>\n          <div>\n            [WIP] An interactive visualization of [datasetname] data set.{' '}\n            <button\n              onClick={() => {\n                this.props.toggleAbout(true)\n              }}\n            >\n              About\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Sidebar\n","import React, { Component } from 'react'\nimport * as THREE from 'three'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport * as TWEEN from '@tweenjs/tween.js'\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\n\n\n// Constants for sprite sheets\nlet sprite_side = 73\nlet sprite_size = sprite_side * sprite_side\nlet sprite_number = 14\nlet sprite_image_size = 28\n// actual sprite size needs to be power of 2\nlet sprite_actual_size = 2048\n\nlet mnist_tile_string = 'mnist_tile_solid_'\nlet mnist_tile_locations = [...Array(sprite_number)].map(\n  (n, i) => `${process.env.PUBLIC_URL}/${mnist_tile_string}${i}.png`\n)\n\nlet mnist_images = mnist_tile_locations.map(src => {\n  let img = document.createElement('img')\n  img.src = src\n  return img\n})\n\nlet zoomScaler = input => {\n  let scale1 = d3\n    .scaleLinear()\n    .domain([20, 5])\n    .range([14, 28])\n    .clamp(true)\n  let scale2 = d3\n    .scaleLinear()\n    .domain([2, 0.1])\n    .range([28, 56])\n  if (input >= 5) {\n    return scale1(input)\n    // return 28\n  } else if (input <= 2) {\n    // return scale2(input)\n    return 28\n  } else {\n    return 28\n  }\n}\n\nclass Projection extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.init = this.init.bind(this)\n    this.addPoints = this.addPoints.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.setUpCamera = this.setUpCamera.bind(this)\n    this.animate = this.animate.bind(this)\n    this.getScaleFromZ = this.getScaleFromZ.bind(this)\n    this.getZFromScale = this.getZFromScale.bind(this)\n    this.changeEmbeddings = this.changeEmbeddings.bind(this)\n  }\n\n  changeEmbeddings(prev_choice, new_choice) {\n    // assumes mnist embeddings has been updated\n\n    let ranges = []\n    for (let i = 0; i < sprite_number; i++) {\n      let start = i * sprite_size\n      let end = (i + 1) * sprite_size\n      if (i === sprite_number - 1) end = sprite_number * sprite_size\n      ranges.push([start, end])\n    }\n\n    let embedding_chunks = ranges.map(range =>\n      this.props[this.props.algorithm_embedding_keys[new_choice]].slice(\n        range[0],\n        range[1]\n      )\n    )\n\n    for (let c = 0; c < sprite_number; c++) {\n      let echunk = embedding_chunks[c]\n\n      let points = this.scene.children[0].children[c]\n      let numVertices = echunk.length\n      let position = points.geometry.attributes.position.array\n      let target = new Float32Array(numVertices * 3)\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let x = echunk[i][0]\n        let y = echunk[i][1]\n        let z = echunk[i][2]\n        target[index] = x\n        target[index + 1] = y\n        target[index + 2] = z\n      }\n\n      let tween = new TWEEN.Tween(position)\n        .to(target, 1000)\n        .easing(TWEEN.Easing.Linear.None)\n      tween.onUpdate(function() {\n        points.geometry.attributes.position = new THREE.BufferAttribute(\n          position,\n          3\n        )\n        points.geometry.attributes.position.needsUpdate = true // required after the first render\n      })\n      tween.start()\n    }\n  }\n\n  getZFromScale(scale) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov)\n    let scale_height = this.props.height / scale\n    let camera_z_position = scale_height / (2 * Math.tan(rvFOV / 2))\n    return camera_z_position\n  }\n\n  getScaleFromZ(camera_z_position) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov)\n    let half_fov_height = Math.tan(rvFOV / 2) * camera_z_position\n    let fov_height = half_fov_height * 2\n    let scale = this.props.height / fov_height\n    return scale\n  }\n\n  handleResize = (width, height) => {\n    this.camera.aspect = width / height\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(width, height)\n    let current_scale = this.getScaleFromZ(this.camera.position.z)\n    let d3_x = -(this.camera.position.x * current_scale) + this.props.width / 2\n    let d3_y = this.camera.position.y * current_scale + this.props.height / 2\n    var resize_transform = d3.zoomIdentity\n      .translate(d3_x, d3_y)\n      .scale(current_scale)\n    let view = d3.select(this.mount)\n    this.d3_zoom.transform(view, resize_transform)\n  }\n\n  zoomHandler() {\n    let d3_transform = d3.event.transform\n\n    let scale = d3_transform.k\n    let x = -(d3_transform.x - this.props.width / 2) / scale\n    let y = (d3_transform.y - this.props.height / 2) / scale\n    let z = this.getZFromScale(scale)\n\n    this.camera.position.set(x, y, z)\n\n    // point size scales at end of zoom\n    let new_size = zoomScaler(z)\n    let point_group = this.scene.children[0].children\n    for (let c = 0; c < point_group.length; c++) {\n      point_group[c].material.uniforms.size.value = new_size\n    }\n  }\n\n  setUpCamera() {\n    let { width, height, mnist_embeddings } = this.props\n\n    let aspect = this.camera.aspect\n    let vFOV = this.camera.fov\n    let rvFOV = THREE.Math.degToRad(vFOV)\n\n    let xs = mnist_embeddings.map(e => e[0])\n    let min_x = _.min(xs)\n    let max_x = _.max(xs)\n    let ys = mnist_embeddings.map(e => e[1])\n    let min_y = _.min(ys)\n    let max_y = _.max(ys)\n    let zs = mnist_embeddings.map(e => e[1])\n    let min_z = _.min(zs)\n    let max_z = _.max(zs)\n    let data_width = max_x - min_x\n    let data_height = max_y - min_y\n    let data_depth = max_z - min_z\n    let data_aspect = data_width / data_height\n\n    let max_x_from_center = _.max([min_x, max_x].map(m => Math.abs(m)))\n    let max_y_from_center = _.max([min_y, max_y].map(m => Math.abs(m)))\n    let max_z_from_center = _.max([min_z, max_z].map(m => Math.abs(m)))\n    let max_center = Math.max(max_x_from_center, max_y_from_center, max_z_from_center)\n\n    let camera_z_start\n    if (data_aspect > aspect) {\n      // console.log(\"width is limiter\");\n      // camera_z_start = max_x_from_center / Math.tan(rvFOV / 2) / aspect\n    } else {\n      // console.log(\"height is limiter\");\n      // camera_z_start = max_y_from_center / Math.tan(rvFOV / 2)\n    }\n\n    camera_z_start = max_center / Math.tan(rvFOV / 2)\n\n    let far = camera_z_start * 1.25\n    this.camera.far = far\n    this.camera.position.z = camera_z_start * 1.1\n\n    /*// set up zoom\n    this.d3_zoom = d3\n      .zoom()\n      .scaleExtent([this.getScaleFromZ(far - 1), this.getScaleFromZ(0.1)])\n      .on('zoom', this.zoomHandler.bind(this))\n\n    let view = d3.select(this.mount)\n    this.view = view\n    view.call(this.d3_zoom)\n    let initial_scale = this.getScaleFromZ(this.camera.position.z)\n    var initial_transform = d3.zoomIdentity\n      .translate(width / 2, height / 2)\n      .scale(initial_scale)\n    this.d3_zoom.transform(view, initial_transform)*/\n  }\n\n  addPoints() {\n    let { mnist_embeddings, mnist_labels, color_array } = this.props\n\n    // split embeddings and labels into chunks to match sprites\n    let ranges = []\n    for (let i = 0; i < sprite_number; i++) {\n      let start = i * sprite_size\n      let end = (i + 1) * sprite_size\n      if (i === sprite_number - 1) end = sprite_number * sprite_size\n      ranges.push([start, end])\n    }\n    let embedding_chunks = ranges.map(range =>\n      mnist_embeddings.slice(range[0], range[1])\n    )\n    let label_chunks = ranges.map(range =>\n      mnist_labels.slice(range[0], range[1])\n    )\n\n    // load the textures\n    let loader = new THREE.TextureLoader()\n    this.textures = mnist_tile_locations.map(l => {\n      let t = loader.load(l)\n      t.flipY = false\n      t.magFilter = THREE.NearestFilter\n      // t.minFilter = THREE.LinearMipMapLinearFilter;\n      return t\n    })\n\n    let point_group = new THREE.Group()\n    for (let c = 0; c < sprite_number; c++) {\n      let echunk = embedding_chunks[c]\n      let lchunk = label_chunks[c]\n\n      let vertices = []\n      for (let v = 0; v < echunk.length; v++) {\n        let embedding = echunk[v]\n        let vert = new THREE.Vector3(embedding[0], embedding[1], embedding[2])\n        vertices[v] = vert\n      }\n\n      let geometry = new THREE.BufferGeometry()\n\n      let numVertices = vertices.length\n      let positions = new Float32Array(numVertices * 3)\n      let offsets = new Float32Array(numVertices * 2)\n      let colors = new Float32Array(numVertices * 3)\n      geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3))\n      geometry.addAttribute('offset', new THREE.BufferAttribute(offsets, 2))\n      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3))\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let x = echunk[i][0]\n        let y = echunk[i][1]\n        let z = echunk[i][2]\n        positions[index] = x\n        positions[index + 1] = y\n        positions[index + 2] = z\n      }\n\n      // geometry.attributes.position.copyVector3sArray(vertices)\n\n      let texture_subsize = 1 / sprite_side\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 2) {\n        let x = ((i % sprite_side) * sprite_image_size) / sprite_actual_size\n        let y =\n          (Math.floor(i / sprite_side) * sprite_image_size) / sprite_actual_size\n        offsets[index] = x\n        offsets[index + 1] = y\n      }\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let color = color_array[lchunk[i]]\n        console.log(lchunk[i])\n        colors[index] = color[0] / 255\n        colors[index + 1] = color[1] / 255\n        colors[index + 2] = color[2] / 255\n      }\n\n      // uniforms\n      let uniforms = {\n        texture: { value: this.textures[c] },\n        repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n        size: { value: sprite_image_size*0.2 },\n      }\n\n      let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        attribute vec3 color;\n        varying vec3 vColor;\n        uniform float size;\n        void main() {\n          vOffset = offset;\n          vColor = color;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`\n\n      let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        varying vec3 vColor;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          if ( tex.r < 0.5 ) discard;\n          tex.r = 1.0;\n          tex.g = 1.0;\n          tex.b = 1.0;\n          gl_FragColor = tex * vec4(vColor, 1.0);\n        }`\n\n      // material\n      let material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: vertex_shader,\n        fragmentShader: fragment_shader,\n      })\n\n      // point cloud\n      let point_cloud = new THREE.Points(geometry, material)\n      point_cloud.userData = { sprite_index: c }\n\n      point_group.add(point_cloud)\n    }\n\n    this.scene.add(point_group)\n  }\n\n  addBlankHighlightPoints() {\n    let hover_container = new THREE.Group()\n    this.scene.add(hover_container)\n\n    let vert = new THREE.Vector3(0, 0, 0)\n    let vertices = [vert]\n    let geometry = new THREE.BufferGeometry()\n    let numVertices = vertices.length\n    var positions = new Float32Array(numVertices * 3) // 3 coordinates per point\n    var offsets = new Float32Array(numVertices * 2) // 2 coordinates per point\n    geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3))\n    geometry.addAttribute('offset', new THREE.BufferAttribute(offsets, 2))\n\n    // all the attributes will be filled on hover\n    let texture_subsize = 1 / sprite_side\n\n    // uniforms\n    let uniforms = {\n      texture: { value: this.textures[0] },\n      repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n      size: { value: 56.0 },\n    }\n\n    let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        uniform float size;\n        void main() {\n          vOffset = offset;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`\n\n    let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          tex.a = tex.r;\n          tex.r = 1.0;\n          tex.g = 1.0;\n          tex.b = 1.0;\n          gl_FragColor = tex;\n        }`\n\n    // material\n    var material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertex_shader,\n      fragmentShader: fragment_shader,\n      transparent: true,\n    })\n\n    let point = new THREE.Points(geometry, material)\n    point.frustumCulled = false\n\n    this.scene.children[1].visible = false\n    this.scene.children[1].add(point)\n  }\n\n  highlightPoint(sprite_index, digit_index, full_index) {\n    let { algorithm_embedding_keys, algorithm_choice } = this.props\n\n    let point = this.scene.children[1].children[0]\n    console.log()\n    let embedding = this.props[algorithm_embedding_keys[algorithm_choice]][\n      full_index\n    ]\n\n    let vert = new THREE.Vector3(embedding[0], embedding[1], embedding[2])\n    let vertices = [vert]\n\n    var offsets = new Float32Array(2) // 2 coordinates per point\n\n    let x = ((digit_index % sprite_side) * 28) / 2048\n    let y = (Math.floor(digit_index / sprite_side) * 28) / 2048\n    offsets[0] = x\n    offsets[1] = y\n\n    point.geometry.attributes.position.copyVector3sArray(vertices)\n    point.geometry.attributes.position.needsUpdate = true // required after the first render\n    point.geometry.attributes.offset.array = offsets\n    point.geometry.attributes.offset.needsUpdate = true // required after the first render\n\n    // need to set attributes on geometry and uniforms on material\n    point.material.uniforms.texture.value = this.textures[sprite_index]\n  }\n\n  removeHighlights() {\n    let highlight_container = this.scene.children[1]\n    let highlights = highlight_container.children\n    highlight_container.remove(...highlights)\n  }\n\n  checkIntersects(mouse_position) {\n    let { width, height, sidebar_ctx, sidebar_image_size } = this.props\n\n    function mouseToThree([mouseX, mouseY]) {\n      return new THREE.Vector3(\n        (mouseX / width) * 2 - 1,\n        -(mouseY / height) * 2 + 1,\n        1\n      )\n    }\n\n    function sortIntersectsByDistanceToRay(intersects) {\n      return _.sortBy(intersects, 'distanceToRay')\n    }\n\n    let mouse_vector = mouseToThree(mouse_position)\n    this.raycaster.setFromCamera(mouse_vector, this.camera)\n    this.raycaster.params.Points.threshold = 0.25\n    let intersects = this.raycaster.intersectObjects(\n      this.scene.children[0].children\n    )\n    if (intersects[0]) {\n      let sorted_intersects = sortIntersectsByDistanceToRay(intersects)\n      let intersect = sorted_intersects[0]\n      let sprite_index = intersect.object.userData.sprite_index\n      let digit_index = intersect.index\n      let full_index = sprite_index * sprite_size + digit_index\n      this.props.setHoverIndex(full_index)\n      this.highlightPoint(sprite_index, digit_index, full_index)\n      this.scene.children[1].visible = true\n      console.log(this.props.mnist_labels[full_index])\n\n      sidebar_ctx.fillRect(0, 0, sidebar_image_size, sidebar_image_size)\n      sidebar_ctx.drawImage(\n        mnist_images[sprite_index],\n        // source rectangle\n        (digit_index % sprite_side) * sprite_image_size,\n        Math.floor(digit_index / sprite_side) * sprite_image_size,\n        sprite_image_size,\n        sprite_image_size,\n        // destination rectangle\n        0,\n        0,\n        sidebar_image_size,\n        sidebar_image_size\n      )\n    } else {\n      this.props.setHoverIndex(null)\n      this.scene.children[1].visible = false\n      sidebar_ctx.fillRect(0, 0, sidebar_image_size, sidebar_image_size)\n    }\n  }\n\n  handleMouse() {\n    let view = d3.select(this.renderer.domElement)\n\n    this.raycaster = new THREE.Raycaster()\n\n    view.on('mousemove', () => {\n      let [mouseX, mouseY] = d3.mouse(view.node())\n      let mouse_position = [mouseX, mouseY]\n      this.checkIntersects(mouse_position)\n    })\n  }\n\n  init() {\n    let { width, height } = this.props\n\n    this.scene = new THREE.Scene()\n    //this.scene.background = new THREE.Color('#FFFFFF' );\n\n\n    let vFOV = 20\n    let aspect = width / height\n    let near = 0.01\n    let far = 1000\n\n    this.camera = new THREE.PerspectiveCamera(vFOV, aspect, near, far)\n    this.camera.position.set(120, 100, 0)\n    //this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n\n    this.renderer = new THREE.WebGLRenderer({antialias: true})\n    this.renderer.setClearColor('#000000', 1)\n    this.renderer.setSize(width, height)\n    this.mount.appendChild(this.renderer.domElement)\n\n    this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n\n    this.addPoints()\n\n    this.addBlankHighlightPoints()\n\n    this.setUpCamera()\n\n    this.animate()\n\n    this.handleMouse()\n    //this.controls.update();\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate)\n    TWEEN.update()\n    this.controls.update();\n    this.renderer.render(this.scene, this.camera)\n    \n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  componentDidUpdate(prevProps) {\n    let { width, height } = this.props\n    if (width !== prevProps.width || height !== prevProps.height) {\n      this.handleResize(width, height)\n    }\n    if (prevProps.algorithm_choice !== this.props.algorithm_choice) {\n      this.changeEmbeddings(\n        prevProps.algorithm_choice,\n        this.props.algorithm_choice\n      )\n    }\n  }\n\n  componentWillUnmount() {\n    this.mount.removeChild(this.renderer.domElement)\n  }\n\n  \n\n  render() {\n    let { width, height } = this.props\n    return (\n      <div\n        style={{ width: width, height: height, overflow: 'hidden' }}\n        ref={mount => {\n          this.mount = mount\n        }}\n      />\n    )\n  }\n}\n\nexport default Projection\n","import React, { Component } from 'react'\nimport Markdown from 'react-remarkable'\nimport { about_text } from './Content'\n\nclass About extends Component {\n  render() {\n    let { grem, p } = this.props\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          background: '#222',\n          color: '#fff',\n          paddingTop: grem * 2,\n          overflowY: 'auto',\n          fontSize: 16,\n          lineHeight: 1.5,\n        }}\n      >\n        <div\n          style={{\n            background: '#333',\n            position: 'fixed',\n            left: 0,\n            top: 0,\n            right: 0,\n            padding: grem / 2,\n          }}\n        >\n          About\n          <button\n            onClick={() => {\n              this.props.toggleAbout(false)\n            }}\n            className=\"hover-555\"\n            style={{\n              position: 'absolute',\n              right: 0,\n              top: 0,\n              height: grem * 2,\n              width: grem * 2,\n              padding: grem / 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              textDecoration: 'none',\n            }}\n          >\n            &times;\n          </button>\n        </div>\n        <div\n          style={{\n            maxWidth: grem * 30,\n            margin: '0 auto',\n            padding: grem / 2,\n            color: '#fff',\n          }}\n        >\n          <Markdown>{about_text}</Markdown>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About\n","export let about_text = `\n# About EmbedAnything\nThis is an interactive visualization that embeds, clusters and analyses multimodal data.\n\n# About UMAP explorer\nThe tool is build upon UMAP explorer. The original code is viewable [on github](https://github.com/GrantCuster/umap-explorer).\n`\n","import React, { Component } from 'react'\nimport Sidebar from './Sidebar'\nimport Projection from './Projection'\nimport About from './About'\nimport * as _ from 'lodash'\n\n// padding constructor\nfunction p(tb, lr) {\n  return `${tb}px ${lr}px`\n}\n\nlet color_array = [\n  [141, 211, 199],\n  [255, 255, 179],\n  [190, 186, 218],\n  [251, 128, 114],\n  [128, 177, 211],\n  [253, 180, 98],\n  [179, 222, 105],\n  [252, 205, 229],\n  [188, 128, 189],\n  [204, 235, 197],\n]\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ww: null,\n      wh: null,\n      sidebar_height: null,\n      hover_index: null,\n      show_about: null,\n      algorithm_choice: 0,\n      dim_choice: 3,\n    }\n    this.sidebar_ctx = null\n    this.setSize = _.debounce(this.setSize.bind(this), 200)\n    this.checkHash = this.checkHash.bind(this)\n    this.setSidebarCanvas = this.setSidebarCanvas.bind(this)\n    this.toggleAbout = this.toggleAbout.bind(this)\n    this.selectAlgorithm = this.selectAlgorithm.bind(this)\n    this.selectDim = this.selectDim.bind(this)\n\n  }\n\n  selectDim(v) {\n    let i = this.props.dim_options.indexOf(v)\n    this.setState({ dim_choice: i })\n  }\n\n\n  selectAlgorithm(v) {\n    let i = this.props.algorithm_options.indexOf(v)\n    this.setState({ algorithm_choice: i })\n  }\n\n  setSize() {\n    this.setState({ ww: window.innerWidth, wh: window.innerHeight })\n    let sidebar_height = this.sidebar_mount.offsetHeight\n    this.setState({ sidebar_height: sidebar_height })\n    if (this.sidebar_ctx) this.sidebar_ctx.imageSmoothingEnabled = false\n  }\n\n  setSidebarCanvas(canvas) {\n    let ctx = canvas.getContext('2d')\n    ctx.imageSmoothingEnabled = false\n    this.sidebar_ctx = ctx\n  }\n\n  toggleAbout(state) {\n    if (state === true) {\n      window.history.pushState(null, 'About UMAP Explorer', '#about')\n      this.setState({ show_about: true })\n    } else if (state === false) {\n      window.history.pushState(null, 'UMAP Explorer', window.location.pathname)\n      this.setState({ show_about: false })\n    }\n  }\n\n  setHoverIndex(hover_index) {\n    this.setState({ hover_index: hover_index })\n  }\n\n  componentWillMount() {\n    this.setSize()\n    this.checkHash()\n  }\n\n  checkHash() {\n    if (window.location.hash && window.location.hash === '#about') {\n      this.setState({ show_about: true })\n    } else {\n      this.setState({ show_about: false })\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.setSize)\n    window.addEventListener('popstate', this.checkHash)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setSize)\n  }\n\n  render() {\n    let {\n      mnist_embeddings,\n      tsne_mnist_embeddings,\n      md08_umap_mnist_embeddings,\n      mnist_labels,\n      algorithm_options,\n      algorithm_embedding_keys,\n    } = this.props\n    let {\n      ww,\n      wh,\n      sidebar_height,\n      hover_index,\n      show_about,\n      algorithm_choice,\n      two_dim,\n    } = this.state\n    let sidebar_ctx = this.sidebar_ctx\n\n    let line_height = 1.5\n\n    let sidebar_style = {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      height: '100vh',\n      overflow: 'auto',\n      background: '#d3d3d3',\n      display: 'flex',\n      flexDirection: 'column',\n    }\n    let main_style = {\n      position: 'relative',\n      height: '100vh',\n      background: '#d3d3d3',\n      overflow: 'hidden',\n    }\n\n    let sidebar_image_size, sidebar_orientation\n    let font_size = 16\n    if (ww < 800) {\n      font_size = 14\n      sidebar_style = {\n        ...sidebar_style,\n        flexDirection: 'row',\n        width: '100%',\n        top: 'auto',\n        height: 'auto',\n        bottom: 0,\n      }\n      main_style = { width: ww, height: wh - sidebar_height }\n      sidebar_image_size = font_size * line_height * 3\n      sidebar_orientation = 'horizontal'\n    } else if (ww < 800 + 600) {\n      let scaler = 200 + (300 - 200) * ((ww - 800) / 600)\n      font_size = 14 + 2 * ((ww - 800) / 600)\n      sidebar_style = {\n        ...sidebar_style,\n        width: scaler,\n      }\n      sidebar_image_size = sidebar_style.width\n      main_style = {\n        ...main_style,\n        width: ww - scaler,\n        left: scaler,\n        height: wh,\n      }\n      sidebar_orientation = 'vertical'\n    } else {\n      sidebar_style = {\n        ...sidebar_style,\n        width: 300,\n      }\n      main_style = {\n        ...main_style,\n        width: ww - 300,\n        left: 300,\n        height: wh,\n      }\n      sidebar_image_size = sidebar_style.width\n      sidebar_orientation = 'vertical'\n    }\n\n    let grem = font_size * line_height\n\n    let general_style = {\n      fontSize: font_size,\n      lineHeight: line_height,\n    }\n\n    return ww !== null ? (\n      <div style={general_style}>\n        <div\n          style={sidebar_style}\n          ref={sidebar_mount => {\n            this.sidebar_mount = sidebar_mount\n          }}\n        >\n          <Sidebar\n            sidebar_orientation={sidebar_orientation}\n            sidebar_image_size={sidebar_image_size}\n            grem={grem}\n            p={p}\n            color_array={color_array}\n            setSidebarCanvas={this.setSidebarCanvas}\n            hover_index={hover_index}\n            mnist_labels={mnist_labels}\n            toggleAbout={this.toggleAbout}\n            algorithm_options={algorithm_options}\n            algorithm_choice={algorithm_choice}\n            selectAlgorithm={this.selectAlgorithm}\n            //dim_options={dim_options}\n            //dim_choice={dim_choice}\n          />\n        </div>\n        <div style={main_style}>\n          <Projection\n            width={main_style.width}\n            height={main_style.height}\n            mnist_embeddings={mnist_embeddings}\n            tsne_mnist_embeddings={tsne_mnist_embeddings}\n            md08_umap_mnist_embeddings={md08_umap_mnist_embeddings}\n            mnist_labels={mnist_labels}\n            color_array={color_array}\n            sidebar_ctx={sidebar_ctx}\n            sidebar_image_size={sidebar_image_size}\n            setHoverIndex={this.setHoverIndex.bind(this)}\n            algorithm_embedding_keys={algorithm_embedding_keys}\n            algorithm_choice={algorithm_choice}\n            //dim_choice={dim_choice}\n          />\n        </div>\n        {show_about ? (\n          <About grem={grem} p={p} toggleAbout={this.toggleAbout} />\n        ) : null}\n      </div>\n    ) : (\n      <div style={{ padding: '1rem' }}>Loading layout...</div>\n    )\n  }\n}\n\nexport default Layout\n","import React, { Component } from 'react'\nimport Layout from './Layout'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\n\nlet algorithm_options = ['UMAP', 'T-SNE', 'UMAP min_dist=0.8']\nlet algorithm_embedding_keys = [\n  'mnist_embeddings',\n  'tsne_mnist_embeddings',\n  'md08_umap_mnist_embeddings',\n]\n\nclass Data extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mnist_embeddings: null,\n      mnist_labels: null,\n      md08_umap_mnist_embeddings: null,\n    }\n  }\n\n  scaleEmbeddings(embeddings) {\n    let xs = embeddings.map(e => Math.abs(e[0]))\n    let ys = embeddings.map(e => Math.abs(e[1]))\n    let zs = embeddings.map(e => Math.abs(e[2]))\n    let max_x = _.max(xs)\n    let max_y = _.max(ys)\n    let max_z = _.max(zs)\n    let max = Math.max(max_x, max_y, max_z)\n    let scale = d3\n      .scaleLinear()\n      .domain([-max, max])\n      .range([-20, 20])\n    let scaled_embeddings = embeddings.map(e => [scale(e[0]), scale(e[1]),scale(e[2])])\n    return scaled_embeddings\n  }\n\n  componentDidMount() {\n    fetch(`${process.env.PUBLIC_URL}/mnist_embeddings.json`)\n      .then(response => response.json())\n      .then(mnist_embeddings => {\n        let scaled_embeddings = this.scaleEmbeddings(mnist_embeddings)\n        this.setState({\n          mnist_embeddings: scaled_embeddings,\n        })\n      })\n    fetch(`${process.env.PUBLIC_URL}/md08_umap_mnist_embeddings.json`)\n      .then(response => response.json())\n      .then(mnist_embeddings => {\n        let scaled_embeddings = this.scaleEmbeddings(mnist_embeddings)\n        console.log('got em')\n        this.setState({\n          md08_umap_mnist_embeddings: scaled_embeddings,\n        })\n      })\n    fetch(`${process.env.PUBLIC_URL}/tsne_mnist_embeddings.json`)\n      .then(response => response.json())\n      .then(mnist_embeddings => {\n        let scaled_embeddings = this.scaleEmbeddings(mnist_embeddings)\n        this.setState({\n          tsne_mnist_embeddings: scaled_embeddings,\n        })\n      })\n    fetch(`${process.env.PUBLIC_URL}/mnist_labels.json`)\n      .then(response => response.json())\n      .then(mnist_labels =>\n        this.setState({\n          mnist_labels: mnist_labels,\n        })\n      )\n  }\n\n  render() {\n    console.log(this.state)\n    return this.state.mnist_embeddings && this.state.mnist_labels ? (\n      <Layout\n        {...this.state}\n        algorithm_options={algorithm_options}\n        algorithm_embedding_keys={algorithm_embedding_keys}\n      />\n    ) : (\n      <div style={{ padding: '1rem' }}>Loading data...</div>\n    )\n  }\n}\n\nexport default Data\n","import React, { Component } from 'react'\nimport './App.css'\nimport Data from './Data'\n\nclass App extends Component {\n  render() {\n    return <Data />\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}